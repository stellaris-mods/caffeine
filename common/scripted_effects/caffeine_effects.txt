# From country scope
caffeine_find_researchplanet = {
	ROOT = { set_variable = { which = "CaffeineHighest" value = 0 } }
	every_owned_planet = {
		limit = {
			is_terraforming = no
			is_occupied_flag = no
			has_ground_combat = no
			controller = { is_same_value = PREVPREV }
		}
		set_planet_flag = "caffeine_unchecked"
	}
	while = {
		limit = { any_owned_planet { has_planet_flag = "caffeine_unchecked" } }
		random_owned_planet = {
			limit = { has_planet_flag = "caffeine_unchecked" }
			if = {
				limit = {
					PREV = {
						NOT = {
							any_owned_fleet = {
								is_ship_class = shipclass_science_ship
								exists = leader
								exists = orbit
								orbit = { is_same_value = PREVPREVPREV }
								has_fleet_order = assist_research_order
							}
						}
					}
				}
				# Reset research building counter
				ROOT = {
					set_variable = {
						which = "CaffeineCount"
						value = 0
					}
				}
				# Count buildings with science labs
				every_tile = {
					limit = { has_any_science_lab = yes }
					ROOT = {
						change_variable = {
							which = "CaffeineCount"
							value = 1 # +1
						}
					}
				}
				if = {
					limit = {
						# Does this planet have more research than the
						# previously highest one?
						ROOT = {
							check_variable = {
								which = "CaffeineCount"
								value > "CaffeineHighest"
							}
						}
					}
					# Yes, it does, save it.
					ROOT = {
						set_variable = {
							which = "CaffeineHighest"
							value = "CaffeineCount"
						}
					}
					save_event_target_as = caffeine_research_planet
				}
			}
			# Make sure we dont loop forever
			remove_planet_flag = "caffeine_unchecked"
			# And then we loop with while{}
		}
	}
}

caffeine_find_surveylocation = {
	# First check if there is a non-surveyed system inside our borders
	ROOT = { # fleet
		closest_system = {
			limit = {
				is_within_borders_of = FROM
				caffeine_valid_survey_location = yes
			}
			save_event_target_as = caffeine_survey
		}
	}

	if = {
		limit = { NOT = { exists = event_target:caffeine_survey } }
		# Find the one closest to our capital
		capital_scope = {
			closest_system = {
				limit = {
					OR = { # Cant NOR this because it wouldn't stop at the first check then
						NOT = { exists = space_owner }
						space_owner = { NOT = { has_closed_borders = FROM } }
					}
					caffeine_valid_survey_location = yes
				}
				save_event_target_as = caffeine_survey
			}
		}
	}
}
